package Chess;

import java.util.ArrayList;

public abstract class ChessPiece implements IChessPiece {

	private Player owner;

	protected ChessPiece(Player player) {
		this.owner = player;
	}

	public abstract String type();

	public Player player() {
		return owner;
	}
	
	 public abstract ArrayList<Move> possibleMoves(int currentRow,
             int currentCol,
             IChessPiece[][] board);

		  public boolean isValidMove(Move move, IChessPiece[][] board) {
		        if (((move.fromRow == move.toRow) && (move.fromColumn ==
		                move.toColumn))) {
		            return false;
		        }
		        if(move.toColumn < 0 || move.toRow < 0 || move.toColumn >
		                board.length -1 || move.toRow > board.length - 1)
		            return false;
		        if (board[move.toRow][move.toColumn] != null &&
		                board[move.toRow][move.toColumn].player() == player()){
		            return false;
		        }
		        return true;
		    }
		}
	
